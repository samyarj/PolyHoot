image: registry.gitlab.com/nikolayradoev/docker-images/chrome-mongo-node:20233
#
cache:
    key: '${CI_COMMIT_REF_SLUG}-server'
    paths:
        - server/node_modules/
    policy: pull

.only-server: &only-server
    only:
        refs:
            - main
            - merge_requests
        changes:
            - server/**/*
            - common/**/*
    cache:
        key: '${CI_COMMIT_REF_SLUG}-server'
        paths:
            - server/node_modules/
        policy: pull

stages:
    - install
    - deploy

install:server:
    stage: install
    only:
        refs:
            - main
            - merge_requests
        changes:
            - server/**/*
            - common/**/*
    script:
        - cd server
        - npm ci --cache .npm --prefer-offline
    cache:
        key: '${CI_COMMIT_REF_SLUG}-server'
        paths:
            - server/node_modules/
            - server/.npm/
        policy: pull-push

variables:
    EC2_USER: ec2-user
    ORIGIN: 'https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}'

deploy:server:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /deploy/'
      when: manual
  script:
    # 1. Installation sécurisée de ssh-client (sans les warnings GPG)
    - |
      apt-get update -o Acquire::AllowInsecureRepositories=true -qq
      apt-get install -y --allow-unauthenticated openssh-client
      which ssh-agent

    # 2. Configuration SSH (version robuste)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$EC2_PEM_FILE_CONTENT" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

    # 3. Commande SSH (sans pseudo-terminal)
    - |
      ssh -o StrictHostKeyChecking=no \
          -o ServerAliveInterval=15 \
          "${EC2_USER}@${EC2_HOST}" "
        set -e
        # Vos commandes Amazon Linux (avec sudo/yum) ici :
        sudo yum update -y
        rm -rf repo
        git clone ${ORIGIN} repo
        cd repo
        git checkout ${CI_COMMIT_SHA}
        cd server
        npm ci
        npm run build
        PORT=${SERVER_PORT} forever start -a -l /var/log/messages out/server/app/index.js
      "
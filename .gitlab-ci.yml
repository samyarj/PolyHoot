image: registry.gitlab.com/nikolayradoev/docker-images/chrome-mongo-node:20233
#
cache:
    key: '${CI_COMMIT_REF_SLUG}-server'
    paths:
        - server/node_modules/
    policy: pull

.only-server: &only-server
    only:
        refs:
            - main
            - merge_requests
        changes:
            - server/**/*
            - common/**/*
    cache:
        key: '${CI_COMMIT_REF_SLUG}-server'
        paths:
            - server/node_modules/
        policy: pull

stages:
    - install
    - deploy

install:server:
    stage: install
    only:
        refs:
            - main
            - merge_requests
        changes:
            - server/**/*
            - common/**/*
    script:
        - cd server
        - npm ci --cache .npm --prefer-offline
    cache:
        key: '${CI_COMMIT_REF_SLUG}-server'
        paths:
            - server/node_modules/
            - server/.npm/
        policy: pull-push

variables:
    EC2_USER: ec2-user
    ORIGIN: 'https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}'

deploy:server:
    stage: deploy
    rules:
        - if: '$CI_COMMIT_TAG =~ /deploy/'
          when: manual
    script:
        - 'which ssh-agent || (apt-get update -qq && apt-get install -qq openssh-client)'
        - eval $(ssh-agent -s)
        - ssh-add <(echo "$EC2_PEM_FILE_CONTENT")
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - |
            timeout 1200 ssh -t -oStrictHostKeyChecking=no -o ServerAliveInterval=15 -o ServerAliveCountMax=5 "${EC2_USER}@${EC2_HOST}" "
                set -e
                echo 'Force kill any node app'
                forever stopall || true
                sudo fuser -k '${SERVER_PORT}/tcp' || true
                
                echo 'Clean and update repository'
                rm -rf repo || true
                git clone ${ORIGIN} repo
                cd repo
                git remote set-url origin ${ORIGIN}
                git fetch --all --force
                git checkout ${CI_COMMIT_SHA} --force
                
                echo 'Build the project'
                cd server
                npm ci
                npm run build
                
                echo 'Launch the server'
                PORT=${SERVER_PORT} forever start -a -l /var/log/messages out/server/app/index.js
                echo 'Deployment completed successfully'
            "